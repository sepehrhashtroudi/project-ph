
/**
  ******************************************************************************
  * @file           : main.c
  * @brief          : Main program body
  ******************************************************************************
  * This notice applies to any and all portions of this file
  * that are not between comment pairs USER CODE BEGIN and
  * USER CODE END. Other portions of this file, whether 
  * inserted by the user or by software development tools
  * are owned by their respective copyright owners.
  *
  * Copyright (c) 2018 STMicroelectronics International N.V. 
  * All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without 
  * modification, are permitted, provided that the following conditions are met:
  *
  * 1. Redistribution of source code must retain the above copyright notice, 
  *    this list of conditions and the following disclaimer.
  * 2. Redistributions in binary form must reproduce the above copyright notice,
  *    this list of conditions and the following disclaimer in the documentation
  *    and/or other materials provided with the distribution.
  * 3. Neither the name of STMicroelectronics nor the names of other 
  *    contributors to this software may be used to endorse or promote products 
  *    derived from this software without specific written permission.
  * 4. This software, including modifications and/or derivative works of this 
  *    software, must execute solely and exclusively on microcontroller or
  *    microprocessor devices manufactured by or for STMicroelectronics.
  * 5. Redistribution and use of this software other than as permitted under 
  *    this license is void and will automatically terminate your rights under 
  *    this license. 
  *
  * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  *
  ******************************************************************************
  */
/* Includes ------------------------------------------------------------------*/
#include "main.h"
#include "stm32f4xx_hal.h"
#include "cmsis_os.h"
#include "usart.h"
#include "gpio.h"

/* USER CODE BEGIN Includes */
#include "KS0108.h"
#include "glcd_menu.h"
#include <string.h>
#include "font5x8.h"
/* USER CODE END Includes */

/* Private variables ---------------------------------------------------------*/

/* USER CODE BEGIN PV */
/* Private variables ---------------------------------------------------------*/
TaskHandle_t lcd_demo_handle = NULL;
Menu menu_list[6];
/* USER CODE END PV */

/* Private function prototypes -----------------------------------------------*/
void SystemClock_Config(void);
void MX_FREERTOS_Init(void);

/* USER CODE BEGIN PFP */
/* Private function prototypes -----------------------------------------------*/
void lcd_demo(void *);
/* USER CODE END PFP */

/* USER CODE BEGIN 0 */

/* USER CODE END 0 */

/**
  * @brief  The application entry point.
  *
  * @retval None
  */
int main(void)
{
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MCU Configuration----------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();

  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();

  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  MX_USART2_UART_Init();
  /* USER CODE BEGIN 2 */
	GLCD_Initalize();
	GLCD_ClearScreen();
	HAL_UART_Transmit(&huart2,"salam",5,100);
	strcpy(menu_list[0].menu_name , "Main menu:");
	strcpy(menu_list[0].menu_items[0],  "Calibration");
	strcpy(menu_list[0].menu_items[1] , "Temp sensor ");
	strcpy(menu_list[0].menu_items[2] , "Date&time   ");
	strcpy(menu_list[0].menu_items[3] , "Controller  ");
	strcpy(menu_list[0].menu_items[4] , "Thresholds  ");
	menu_list[0].menu_item_count = 5;
	menu_list[0].menu_pointer=0;
	
	HAL_UART_Transmit(&huart2,"salam",5,100);
	xTaskCreate(lcd_demo,"lcd_demo",128,( void * )1,5,&lcd_demo_handle);
	HAL_UART_Transmit(&huart2,"salam",5,100);

  /* USER CODE END 2 */

  /* Call init function for freertos objects (in freertos.c) */
  MX_FREERTOS_Init();

  /* Start scheduler */
  osKernelStart();
  
  /* We should never get here as control is now taken by the scheduler */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	//lcd_demo((void *)1);
  /* USER CODE END WHILE */

  /* USER CODE BEGIN 3 */
	GLCD_ClearScreen();
	//glcd_set_font(Tahoma11x13 ,11,13,32,127);
	//glcd_draw_char_xy(1,1,'y');
	GLCD_SetPixel(1,2,1);
	GLCD_SetPixel(1,3,1);
	GLCD_SetPixel(1,4,1);
	//osDelay(1000);
	//HAL_Delay(1000);
  }
  /* USER CODE END 3 */

}

/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{

  LL_FLASH_SetLatency(LL_FLASH_LATENCY_5);

  if(LL_FLASH_GetLatency() != LL_FLASH_LATENCY_5)
  {
  Error_Handler();  
  }
  LL_PWR_SetRegulVoltageScaling(LL_PWR_REGU_VOLTAGE_SCALE1);

  LL_RCC_HSE_Enable();

   /* Wait till HSE is ready */
  while(LL_RCC_HSE_IsReady() != 1)
  {
    
  }
  LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSE, LL_RCC_PLLM_DIV_4, 168, LL_RCC_PLLP_DIV_2);

  LL_RCC_PLL_Enable();

   /* Wait till PLL is ready */
  while(LL_RCC_PLL_IsReady() != 1)
  {
    
  }
  LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_1);

  LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_4);

  LL_RCC_SetAPB2Prescaler(LL_RCC_APB2_DIV_2);

  LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);

   /* Wait till System clock is ready */
  while(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_PLL)
  {
  
  }
  LL_Init1msTick(168000000);

  LL_SYSTICK_SetClkSource(LL_SYSTICK_CLKSOURCE_HCLK);

  LL_SetSystemCoreClock(168000000);

  /* SysTick_IRQn interrupt configuration */
  NVIC_SetPriority(SysTick_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),15, 0));
}

/* USER CODE BEGIN 4 */
void lcd_demo(void * pvParameters)
{
	while(1)
	{		//HAL_UART_Transmit(&huart2,"salam\n",6,100);
//		GLCD_ClearScreen();
//		GLCD_GoTo(0,0);
//		GLCD_WriteString("+-------------------+");
//		GLCD_GoTo(0,1);
//		GLCD_WriteString("|       salam       |");
//		GLCD_GoTo(0,2);
//		GLCD_WriteString("|       khobi       |");
//		GLCD_GoTo(0,3);
//		GLCD_WriteString("|                   |");
//		GLCD_GoTo(0,4);
//		GLCD_WriteString("|                   |");
//		GLCD_GoTo(0,5);
//		GLCD_WriteString("|      chetori      |");
//		GLCD_GoTo(0,6);
//		GLCD_WriteString("|                   |");
//		GLCD_GoTo(0,7);
//		GLCD_WriteString("+-------------------+");
//		osDelay(1000);
//		GLCD_ClearScreen();
//		GLCD_GoTo(0,0);
//		GLCD_WriteString("+-------------------+");
//		GLCD_GoTo(0,1);
//		GLCD_WriteString("|*************      |");
//		GLCD_GoTo(0,2);
//		GLCD_WriteString("| *************     |");
//		GLCD_GoTo(0,3);
//		GLCD_WriteString("|   *************   |");
//		GLCD_GoTo(0,4);
//		GLCD_WriteString("|    *************  |");
//		GLCD_GoTo(0,5);
//		GLCD_WriteString("|     ************* |");
//		GLCD_GoTo(0,6);
//		GLCD_WriteString("|      *************|");
//		GLCD_GoTo(0,7);
//		GLCD_WriteString("+-------------------+");
		GLCD_ClearScreen();
		glcd_set_font(Terminal6x8 ,6,8,32,127);
		
		glcd_draw_string_xy(0,0,menu_list[0].menu_name,0,0);
		for(int i=0 ; i < menu_list[0].menu_item_count ; i++)
		{
			if(i == menu_list[0].menu_pointer)
			{
				glcd_draw_string_xy(20,i*10+10,menu_list[0].menu_items[i],0,1);
			}
			else
			{
				glcd_draw_string_xy(20,i*10+10,menu_list[0].menu_items[i],0,0);
			}
		}
		//GLCD_ClearScreen();
		


		//GLCD_SetPixel(0,0,1);
		//GLCD_SetPixel(0,1,1);
		//GLCD_SetPixel(1,3,1);
		GLCD_SetPixel(0,1,1);
		GLCD_SetPixel(0,0,1);
		osDelay(1000);
		//HAL_Delay(1000);
	}
}
/* USER CODE END 4 */

/**
  * @brief  Period elapsed callback in non blocking mode
  * @note   This function is called  when TIM1 interrupt took place, inside
  * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM1) {
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}

/**
  * @brief  This function is executed in case of error occurrence.
  * @param  file: The file name as string.
  * @param  line: The line in file as a number.
  * @retval None
  */
void _Error_Handler(char *file, int line)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  while(1)
  {
  }
  /* USER CODE END Error_Handler_Debug */
}

#ifdef  USE_FULL_ASSERT
/**
  * @brief  Reports the name of the source file and the source line number
  *         where the assert_param error has occurred.
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t* file, uint32_t line)
{ 
  /* USER CODE BEGIN 6 */
  /* User can add his own implementation to report the file name and line number,
     tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
  /* USER CODE END 6 */
}
#endif /* USE_FULL_ASSERT */

/**
  * @}
  */

/**
  * @}
  */

/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
